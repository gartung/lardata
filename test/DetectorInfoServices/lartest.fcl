#include "geometry.fcl"
#include "detectorproperties.fcl"
#include "larproperties.fcl"
#include "detectorclocks.fcl"

process_name: LArPropTest

services:
{
  ExptGeoHelperInterface:    @local::standard_geometry_helper
  Geometry:                  @local::standard_geo
  DetectorPropertiesService: @local::standard_detproperties
  LArPropertiesService:      @local::standard_properties
  DetectorClocksService:     @local::standard_detectorclocks
}



source:
{
  module_type: EmptyEvent
  maxEvents:   0       # Number of events to create
}

outputs:
{
}

physics:
{

 analyzers:
 {
  lartest: { module_type: "LArPropTest" }
 }

 #define the path for analyzer modules, order does not matter.
 #see lines starting physics.analyzers below
 ana:  [ lartest ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana]  
}

physics.analyzers.lartest:
{
  module_type: "LArPropTest"
}
