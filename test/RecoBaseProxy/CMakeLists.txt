###############################################################################
###  ProxyBase tests
###
add_subdirectory(ProxyBase)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-sign-compare -Wno-pedantic")

simple_plugin(ProxyBaseTest "module"
  lardata_RecoBaseProxy
  lardataobj_RecoBase
  art_Persistency_Provenance
  ${MF_MESSAGELOGGER}
  ${ROOT_Core_LIBRARY} 
  ${ROOT_GenVector_LIBRARY}
  USE_BOOST_UNIT
  )

cet_test(ProxyBase_test
  HANDBUILT
  DATAFILES test_proxybase.fcl
  TEST_EXEC lar_ut
  TEST_ARGS -- --rethrow-all -c ./test_proxybase.fcl
  USE_BOOST_UNIT
  )


###############################################################################
###  TrackProxy tests
###
simple_plugin(TrackProxyTest "module"
  lardata_RecoBaseProxy
  lardataobj_RecoBase
  art_Persistency_Provenance
  ${MF_MESSAGELOGGER}
  ${ROOT_Core_LIBRARY}
  ${ROOT_GenVector_LIBRARY}
  USE_BOOST_UNIT
  )

simple_plugin(TrackProxyHitMaker "module"
  lardataobj_RecoBase
  art_Persistency_Provenance
  ${MF_MESSAGELOGGER}
  ${ROOT_Core_LIBRARY}
  )

simple_plugin(TrackProxyTrackMaker "module"
  lardataobj_RecoBase
  art_Persistency_Provenance
  ${MF_MESSAGELOGGER}
  ${ROOT_Core_LIBRARY}
  )

cet_test(TrackProxy_test
  HANDBUILT
  DATAFILES test_trackproxy.fcl
  TEST_EXEC lar_ut
  TEST_ARGS -- --rethrow-all -c ./test_trackproxy.fcl
  USE_BOOST_UNIT
  )

###############################################################################
###  ChargedSpacePointProxy tests
###
simple_plugin(ChargedSpacePointProxyTest "module"
  lardata_RecoBaseProxy
  lardataobj_RecoBase
  art_Persistency_Provenance
  ${MF_MESSAGELOGGER}
  ${ROOT_Core_LIBRARY}
  ${ROOT_GenVector_LIBRARY}
  USE_BOOST_UNIT
  )

simple_plugin(ChargedSpacePointProxyInputMaker "module"
  lardataobj_RecoBase
  lardata_ArtDataHelper
  ${MF_MESSAGELOGGER}
  ${ROOT_Core_LIBRARY}
  USE_BOOST_UNIT
  )

cet_test(ChargedSpacePointProxy_test
  HANDBUILT
  DATAFILES test_chargedspacepointproxy.fcl
  TEST_EXEC lar_ut
  TEST_ARGS -- --rethrow-all -c ./test_chargedspacepointproxy.fcl
  USE_BOOST_UNIT
  )
